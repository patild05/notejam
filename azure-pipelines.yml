name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
parameters:
  - name: appName
    type: string
    displayName: "Name of application"
    default: "note01"

  - name: environment
    type: string
    displayName: "Select Environment"
    default: 'd'
    values:
      - 'd'
      - 't'
      - 'a'
      - 'p'

  - name: location
    type: string
    displayName: "Select Location"
    default: 'northeurope'
    values:
      - 'northeurope'
      - 'westeurope'

  - name: service_connection
    type: string
    displayName: "Enter the service connection name, it has to be pre-configured in your Azure DevOps environment."
    default: "Your Azure service connection"

trigger: none

variables:
  agent_vmimage: "windows-latest"
  artifact_path: "Infrastructure"
  artifact_name: "Infrastructure"
  build_platform: "any cpu"
  build_configuration: "release"
  code_artifact_name: "notejamdrop"
  code_artifact_path: "notejamdrop"

pool:
  vmImage: $(agent_vmimage)

# Jobs
jobs:
  # Publish Artifacts
  - job: artifacts
    pool:
      vmImage: $(agent_vmimage)
    continueOnError: false
    workspace:
      clean: outputs

    steps:
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline Artifact'
        inputs:
          targetPath: $(artifact_path)
          artifact: $(artifact_name)
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 4.4.1'
        inputs:
          versionSpec: 4.4.1
      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: '**\*.sln'
      - task: VSBuild@1
        displayName: 'Build solution'
        inputs:
          solution: '**\*.sln'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
          platform: '$(build_platform)'
          configuration: '$(build_configuration)'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
          ArtifactName: '$(code_artifact_name)'
        condition: succeededOrFailed()

  # Deploy
  - job: deploy
    dependsOn: artifacts    
    pool:
      vmImage: $(agent_vmimage)
    continueOnError: false
    workspace:
      clean: outputs

    steps:
    - checkout: none

    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        artifactName: $(artifact_name)
        targetPath: '$(Pipeline.Workspace)/$(artifact_path)'
    
    - task: DownloadBuildArtifacts@0
      displayName: 'Download code Artifact'
      inputs:
        artifactName: '$(code_artifact_name)'
        downloadPath: '$(Pipeline.Workspace)/$(code_artifact_path)'
        

    - task: AzurePowerShell@5
      displayName: 'Azure PowerShell script: FilePath'
      enabled: false
      inputs:
        azureSubscription: ${{parameters.service_connection}}
        ScriptPath: '$(Pipeline.Workspace)/$(artifact_name)/main.ps1'
        ScriptArguments: '-ApplicationName ${{parameters.appName}} -Environment ${{parameters.environment}} -Location ${{parameters.location}}'
        azurePowerShellVersion: LatestVersion
